{"version":3,"sources":["components/ImageBox.tsx","components/Text.tsx","components/NavBar/NavBar.tsx","components/Wrapper.tsx","components/About/About.tsx","components/Icon.tsx","components/BaseButton.tsx","components/Modal.tsx","components/Card.tsx","components/Projects/Projects.tsx","components/Home/Home.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["ImageBox","styled","div","props","width","height","ImgUrl","radius","Text","p","margin","Nav","nav","isHome","Container","position","withRouter","location","console","log","pathname","to","Wrapper","AboutWrapper","About","src","alt","className","Img","img","Icon","Button","ModalOutside","ModalWrapper","BaseButton","Modal","data","onClick","Icons","icons","map","icon","index","event","target","currentTarget","document","querySelector","classList","remove","title","imgUrl","style","date","start","end","whiteSpace","text","href","repoUrl","CardWrapper","CardBody","Card","useState","isVisibleModal","setIsVisibleModal","as","summary","add","ProjectsWrqpper","Title","h1","Projects","projects","state","project","HomeWrapper","IconWrapper","isVisible","DetailButton","Home","setIsVisible","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.1a6ca7a6.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\ninterface ImageBoxPropsType {\r\n  ImgUrl?: string,\r\n  width?: string,\r\n  height?: string,\r\n  radius?: string,\r\n}\r\n\r\n\r\nconst ImageBox = styled.div<ImageBoxPropsType>`\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n  background-image: url('${props => props.ImgUrl}');\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  display: inline-block;\r\n  border-radius: ${props => props.radius};\r\n`\r\n\r\nexport default ImageBox","import styled from 'styled-components';\r\n\r\n\r\ninterface TextPropsType {\r\n  margin?: string,\r\n  width?: string,\r\n  height?: string\r\n};\r\n\r\nconst Text = styled.p<TextPropsType>`\r\n  display: inline-block;\r\n  width: ${props => props.width ? props.width : ''};\r\n  height: ${props => props.height ? props.height : ''};\r\n  margin: ${props => props.margin ? props.margin : ''};\r\n`\r\n\r\nexport default Text","import React from 'react';\r\nimport ImageBox from '../ImageBox';\r\nimport Text from '../Text';\r\nimport styled from 'styled-components';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\n\r\ninterface ContinerPropsType {\r\n  position: string\r\n}\r\n\r\ninterface NavPropsType {\r\n  isHome: boolean,\r\n}\r\n\r\n\r\nconst Nav = styled.nav<NavPropsType>`\r\n  position: sticky;\r\n  top: 0;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color:#E8C0FF;\r\n  display: ${props => props.isHome ? 'none' : ''};\r\n`\r\n\r\nconst Container = styled.div<ContinerPropsType>`\r\n  height: 50px;\r\n  float: ${props => props.position};\r\n`\r\n\r\nfunction NavBar({ location }: any) : React.ReactElement {\r\n  console.log('path: ', location)\r\n  return (\r\n    <Nav isHome={location.pathname === '/'}>\r\n      <Container position=\"left\">\r\n        <Link to='/'>\r\n          <Text>Home</Text>\r\n        </Link>\r\n        <Link to='/projects'>\r\n          <Text>Projects</Text>\r\n        </Link>\r\n        <Link to='/about'>\r\n          <Text>About</Text>\r\n        </Link>\r\n      </Container>\r\n      <Container position=\"right\">\r\n        <ImageBox radius=\"100%\" width=\"50px\" height=\"50px\" ImgUrl=\"GitHub.png\"/>\r\n        <ImageBox radius=\"100%\" width=\"50px\" height=\"50px\" ImgUrl=\"mail.png\"/>\r\n      </Container>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default withRouter(NavBar)","import styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 1600px;\r\n  margin:auto;\r\n`\r\n\r\nexport default Wrapper","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ImageBox from '../ImageBox';\r\nimport Text from '../Text';\r\nimport Wrapper from '../Wrapper';\r\n\r\n\r\nconst AboutWrapper = styled(Wrapper)`\r\n  margin-top: 3rem;\r\n`\r\n\r\n\r\n\r\nfunction About(): React.ReactElement {\r\n  return (\r\n    <AboutWrapper>\r\n      <img src=\"me.jpg\" alt=\"me\"/>\r\n      <Text width=\"30%\">\r\n        About me\r\n      <div className=\"icons\">\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n        <ImageBox width=\"40px\" height=\"40px\" ImgUrl=\"GitHub.png\" />\r\n      </div>\r\n      </Text>\r\n    </AboutWrapper>\r\n  )\r\n}\r\n\r\nexport default About","import styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\n  height: ${(props) => props.height};\r\n  border-radius: 4px;\r\n`\r\n\r\nfunction Icon({height, src}: any) {\r\n  return (\r\n    <Img src={src} height={height} />\r\n  )\r\n}\r\n\r\nexport default Icon","import styled from 'styled-components';\r\n\r\n\r\nconst Button = styled.div`\r\n  width: 200px;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  color: black;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: white;\r\n    background-color:black;\r\n  }\r\n`\r\n\r\nfunction BaseButton({ onClick, text }: any) {\r\n  return (\r\n    <Button onClick={onClick}>{text}</Button>\r\n  )\r\n}\r\n\r\n\r\nexport default Button","import styled from \"styled-components\"\r\nimport Icon from './Icon';\r\nimport BaseButton from './BaseButton';\r\n\r\ninterface modalPropsType {\r\n  data?: any,\r\n  onClick?: any\r\n}\r\n\r\nconst ModalOutside = styled.div`\r\n  position: fixed;\r\n  top:0;\r\n  left: 0;\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  background-color: rgba(0 , 2, 2, 0.5);\r\n  z-index:999;  \r\n`\r\n\r\nconst ModalWrapper = styled.div`\r\n  width: 50vw;\r\n  min-width: 360px;\r\n  background-color: white;\r\n  position: absolute;\r\n  max-height:80vh;\r\n  top:50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  overflow-y: scroll;\r\n`\r\n\r\nconst CloseButton = styled(BaseButton)`\r\n  position: sticky;\r\n  width: auto;\r\n  height: auto;\r\n  border-radius: 100%;\r\n`\r\n\r\n\r\nfunction Modal( {data, onClick } : modalPropsType) {\r\n  const Icons = data.icons.map((icon:string, index:number) :any => \r\n      <Icon key={index} src={icon} height='50px' alt=\"\" />)\r\n  return (\r\n    <ModalOutside onClick={(event) => {\r\n      if (event.target === event.currentTarget) {\r\n        onClick(false);\r\n        document.querySelector('body')?.classList.remove('not-scroll')\r\n      }\r\n    }}>\r\n      <ModalWrapper>\r\n        <h2>{data.title}</h2>\r\n        <img src={data.imgUrl} style={{width:'100%'}} alt=\"\" />\r\n        <p>{data.date.start} ~ {data.date.end}</p>\r\n        {Icons}\r\n        <p style={{whiteSpace: 'pre-wrap'}}>{data.text}</p>\r\n        <a href={data.repoUrl} target='_blank'>\r\n          <BaseButton>전체코드보기</BaseButton>\r\n        </a>\r\n      </ModalWrapper>\r\n    </ModalOutside>\r\n  )\r\n}\r\n\r\n\r\nexport default Modal","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from './Modal';\r\nimport Text from './Text';\r\nimport BaseButton from './BaseButton';\r\n\r\n\r\ninterface CardPropsType {\r\n  data: any,\r\n}\r\n\r\nconst CardWrapper = styled.div`\r\n  position: relative;\r\n  min-width: 360px;\r\n  background-color: #fff;\r\n  background-clip: border-box;\r\n  border: 1px solid rgba(0,0,0,.125);\r\n  border-radius: .25rem;\r\n  width: 15rem;\r\n  height: auto;\r\n  margin: 1rem;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    z-index: 99;\r\n  }\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n`\r\n\r\nconst CardBody = styled.div`\r\n  padding: 1rem 1rem;\r\n`\r\n\r\nfunction Card( { data }: CardPropsType ) {\r\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\r\n  return (\r\n    <>\r\n      <CardWrapper>\r\n        <Img src={data.imgUrl} />\r\n        <CardBody>\r\n          <Text as='h5'>{data.title}</Text>\r\n          <Text width='100%'>{data.summary}</Text>\r\n          <BaseButton onClick={() => { setIsVisibleModal(true); \r\n            document.querySelector('body')?.classList.add('not-scroll')}}>view detail</BaseButton>\r\n        </CardBody>\r\n      </CardWrapper>\r\n      {isVisibleModal && <Modal data={data} onClick={setIsVisibleModal}/>}\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default Card","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Wrapper from '../Wrapper';\r\nimport Card from '../Card';\r\n\r\n\r\nconst ProjectsWrqpper = styled(Wrapper)`\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin: 2rem 0;\r\n`\r\n\r\n\r\nconst CardWrapper = styled(Wrapper)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: flex-start;\r\n`\r\n\r\n\r\nfunction Projects({ state }: any): React.ReactElement {\r\n  const { projects } = state;\r\n  \r\n  return (\r\n    <ProjectsWrqpper>\r\n      <Title>My Projects</Title>\r\n      <CardWrapper>\r\n        {projects.map((project: any, index: number) => \r\n          <Card key={index} data={project} />\r\n        )}\r\n      </CardWrapper>\r\n    </ProjectsWrqpper>\r\n  )\r\n}\r\n\r\n\r\nexport default Projects","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Text from '../Text';\r\nimport ImageBox from '../ImageBox';\r\nimport BaseButton from '../BaseButton';\r\nimport Wrapper from '../Wrapper';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Icon = styled(ImageBox)`\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  max-width: 300px;\r\n  max-height: 300px;\r\n`\r\n\r\nconst HomeWrapper = styled(Wrapper)`\r\n  width: auto;\r\n  height: 100vh;\r\n  padding: 0 10%;\r\n`\r\n\r\nconst IconWrapper = styled(Wrapper)<any>`\r\n  height:auto;\r\n  position: relative;\r\n  top: 10vh;\r\n  display:${props => props.isVisible ? 'flex' : 'none'};\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`\r\n\r\n\r\nconst DetailButton = styled(BaseButton)<any>`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: ${props => props.isVisible ? 'none' : ''};\r\n  background: black;\r\n  color: white;\r\n  font-size: 50px;\r\n  width: auto;\r\n  &:hover {\r\n    background: white;\r\n    color: black;\r\n  }\r\n`\r\n\r\n\r\nfunction Home(): React.ReactElement {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  return (\r\n    <HomeWrapper>\r\n      <Text height=\"10vh\" width='auto' as=\"h1\">LWJ</Text>\r\n      <DetailButton onClick={() => { setIsVisible(true) } } isVisible={isVisible}>Click Me</DetailButton>\r\n      <IconWrapper isVisible={isVisible}>\r\n        <Link to='/projects'>\r\n          <Icon ImgUrl=\"projects.png\" width=\"30vw\" height=\"30vw\"/>\r\n          <p>Projects</p>\r\n        </Link>\r\n        <a href=\"https://github.com/wonjun9090\" target=\"_blank\">\r\n          <Icon ImgUrl=\"GitHub.png\" width=\"30vw\" height=\"30vw\"/>\r\n          <p>My GitHub</p>\r\n        </a>\r\n        <Link to='/about'>\r\n          <Icon ImgUrl=\"about.png\" width=\"30vw\" height=\"30vw\"/>\r\n          <p>About Me</p>\r\n        </Link>\r\n      </IconWrapper>\r\n    </HomeWrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default Home","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\nimport NavVar from './components/NavBar/NavBar';\r\nimport About from './components/About/About';\r\nimport Projects from './components/Projects/Projects';\r\nimport Home from './components/Home/Home';\r\n\r\n\r\nconst state = {\r\n  projects: [\r\n    {\r\n      title: 'Tailor',\r\n      summary: '챌린지에 특화된 소셜 네트워크 서비스',\r\n      imgUrl: 'Tailor.png',\r\n      repoUrl: 'https://github.com/wonjun9090/Tailor',\r\n      date: {start: '2020년 7월 20일', end: '2020년 8월 21일'},\r\n      icons: [\r\n        'node.png',\r\n        'javascript.png',\r\n        'react.png',\r\n        'graphql.png',\r\n        'apollo.png',\r\n        'prisma.png',\r\n        'styledComponents.png',\r\n      ],\r\n      text: `릴레이 기능을 추가한 챌린지특화 sns서비스 입니다.\r\n      REST api 대신 graphQL을 사용해서 개발했으며 frontend를 맡아 게시물의 업로드 기능과 상태에 따른 화면 구성 및 스타일링을 맡아 개발했습니다.`,\r\n    },\r\n    {\r\n      title: 'UWantBeer',\r\n      summary: '맥주를 추천해주는 맥주 커뮤니티',\r\n      imgUrl: 'UWantBeer.jpg',\r\n      repoUrl: 'https://github.com/wonjun9090/UWantBeer',\r\n      date: {start: '2020년 9월 7일', end: '2020년 10월 8일'},\r\n      icons: [\r\n        'drf.png',\r\n        'javascript.png',\r\n        'vue.png',\r\n        'docker.png',\r\n        'mariaDB.png',\r\n        'firebase.png',\r\n        'sass.png',\r\n      ],\r\n      text: `사용자의 리뷰 정보를 바탕으로 맥주를 추천해주는 맥주 커뮤니티입니다.\r\n      python의 pandas 라이브러리와 surprise 라이브러리의 svd 모델을 이용하여 추천시스템을 구현했습니다.`,\r\n    },\r\n    {\r\n      title: 'FaceOFF',\r\n      summary: '초상권 침해를 방지하기 위한 웹 앱',\r\n      imgUrl: 'FaceOFF.png',\r\n      repoUrl: 'https://github.com/wonjun9090/FaceOFF',\r\n      date: {start: '2020년 10월 12일', end: '2020년 11월 16일'},\r\n      icons: [\r\n        'python.png',\r\n        'drf.png',\r\n        'typescript.png',\r\n        'react.png',\r\n        'docker.png',\r\n        'mariaDB.png',\r\n        'sass.png',\r\n      ],\r\n      text: `자동으로 인식된 얼굴로 간편한 모자이크 설정이 가능한 웹 앱입니다.\r\n      frontend를 맡아 모자이크 대상 선택, 친구 관리, 모자이크 옵션 중 픽셀, 블러, 가상얼굴 변환 기능을 맡았습니다.`,\r\n    },\r\n  ] \r\n}\r\n\r\n\r\n\r\nfunction App():React.ReactElement {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavVar />\r\n      <Switch>\r\n        <Route path=\"/about\" exact>\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/projects\" exact>\r\n          <Projects state={state}/>\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/portfolio\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}